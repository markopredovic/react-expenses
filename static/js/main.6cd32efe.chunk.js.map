{"version":3,"sources":["context/ExpensesContext.js","reducers/expensesReducer.js","types.js","helpers/Utility.js","hooks/useExpenses.js","components/Header/index.js","components/Header/Header.js","components/FilterExpenses/index.js","components/FilterExpenses/FilterExpenses.js","components/ExpensesList/Expense/Expense.js","components/ExpensesList/index.js","components/ExpensesList/ExpensesList.js","components/AddExpenseForm/AddExpenseForm.js","components/AddExpenseForm/index.js","App.js","serviceWorker.js","index.js"],"names":["expensesContext","createContext","expenses","list","add","initialState","month","year","Date","getFullYear","lang","getFullList","state","action","payload","addExpense","expense","filterExpenses","console","log","updatedExpenses","filter","removeExpense","id","expensesReducer","type","getTotal","date","getMonth","reduce","acc","price","getLocalStorage","key","localStorageItemJson","window","localStorage","getItem","e","JSON","parse","setLocalStorage","value","valueString","stringify","setItem","expenseCompare","a","b","useExpenses","localStorageKey","useReducer","dispatch","useEffect","sort","_addExpense","_removeExpense","total","remove","changeLang","Header","strings","LocalizedStrings","en","expenseList","sr","context","useContext","ExpenseContext","setLanguage","getLanguage","className","onClick","to","exact","activeClassName","FilterExpenses","selectDate","all","may","submit","ExpensesContext","useState","selectDisabled","setSelectDisabled","selectMonthRef","useRef","selectYearRef","current","onSubmit","preventDefault","parseInt","name","onChange","ref","style","marginRight","disabled","Expense","color","toLocaleDateString","toFixed","fontSize","cursor","ExpensesList","map","index","registerLocale","AddExpenseForm","addExpenseName","addExpenseValue","emptyName","emptyPrice","errors","setErrors","expenseInputPriceRef","expenseInputNameRef","setDate","createExpense","Math","round","random","validateExpense","Object","keys","length","newExpense","placeholder","locale","selected","App","filteredList","Provider","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cd32efe.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst expensesContext = createContext({\n  expenses: [],\n  list: () => {},\n  add: () => {}\n})\n\nexport default expensesContext\n\n","import { LIST_ALL_EXPENSES, ADD_EXPENSE, FILTER_EXPENSES, REMOVE_EXPENSE, CHANGE_LANG } from \"../types\";\n\nconst initialState = {\n  expenses: [],\n  month: -1,\n  year: new Date().getFullYear(),\n  lang: 'sr'\n};\n\nconst expensesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LIST_ALL_EXPENSES:\n      return getFullList(state, action);\n    case ADD_EXPENSE:\n      return addExpense(state, action.payload);\n    case FILTER_EXPENSES:\n      return filterExpenses(state, action.payload);\n    case REMOVE_EXPENSE:\n        return removeExpense(state, action.payload)\n    case CHANGE_LANG:\n      return {\n        ...state,\n        lang: action.payload\n      }\n    default:\n      console.log(state);\n      return state;\n  }\n};\n\nconst getFullList = (state, action) => {\n  return {\n    ...state,\n    expenses: [...state.expenses, ...action.payload],\n    month: -1,\n    year: new Date().getFullYear()\n  };\n};\n\nconst addExpense = (state, expense) => {\n  return {\n    ...state,\n    expenses: [...state.expenses, expense]\n  };\n};\n\nconst filterExpenses = (state, payload) => {\n  console.log('[FILTER]', payload)\n\n  return {\n    ...state,\n    expenses: payload.updatedExpenses,\n    month: payload.filter.month,\n    year: payload.filter.year\n  };\n};\n\nconst removeExpense = (state, id) => {\n  let updatedExpenses = state.expenses.filter(expense => expense.id !== id)\n\n  return {\n    ...state,\n    expenses: updatedExpenses\n  }\n}\n\nexport default expensesReducer;\n\n// selectors:\nexport const getTotal = state => {\n  return state ? state.expenses\n    .filter(expense => new Date(expense.date).getMonth() === state.month)\n    .reduce((acc, expense) => acc + expense.price, 0) : -1;\n};\n","export const LIST_ALL_EXPENSES = 'LIST_ALL_EXPENSES'\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const FILTER_EXPENSES = \"FILTER_EXPENSES\";\nexport const REMOVE_EXPENSE = \"REMOVE_EXPENSE\";\nexport const CHANGE_LANG = \"CHANGE_LANG\";","export const getLocalStorage = key => {\n  let localStorageItemJson = null;\n\n  try {\n    localStorageItemJson = window.localStorage.getItem(key);\n  } catch (e) {\n    return null;\n  }\n  const localStorageItem = JSON.parse(localStorageItemJson);\n\n  return localStorageItem;\n};\n\nexport const setLocalStorage = (key, value) => {\n  const valueString = JSON.stringify(value);\n\n  window.localStorage.setItem(key, valueString);\n};\n\nexport const expenseCompare = (a, b) => {\n  return new Date(a.date) > new Date(b.date) ? -1 : 1;\n};\n\nexport const getLocaleDate = date => {\n  let localeDate = new Date(date);\n\n  return localeDate.toLocaleDateString(\"sr-SR\");\n};\n","import { useReducer, useEffect } from \"react\";\nimport expensesReducer, { getTotal } from \"../reducers/expensesReducer\";\nimport {\n  LIST_ALL_EXPENSES,\n  ADD_EXPENSE,\n  FILTER_EXPENSES,\n  REMOVE_EXPENSE,\n  CHANGE_LANG\n} from \"../types\";\nimport {\n  getLocalStorage,\n  setLocalStorage,\n  expenseCompare\n} from \"../helpers/Utility\";\n\nconst useExpenses = localStorageKey => {\n  // useReducer\n\n  console.log(\"[USE EXPENSES]\");\n\n  const [state, dispatch] = useReducer(expensesReducer);\n\n  useEffect(() => {\n    list();\n  }, []);\n\n  const list = () => {\n    const expenses = getLocalStorage(localStorageKey).sort(expenseCompare);\n\n    if (expenses) {\n      dispatch({ type: LIST_ALL_EXPENSES, payload: expenses });\n    }\n  };\n\n  const add = expense => {\n    try {\n      _addExpense(expense);\n    } catch (e) {}\n\n    dispatch({ type: ADD_EXPENSE, payload: expense });\n  };\n\n  const _addExpense = expense => {\n    const expenses = getLocalStorage(localStorageKey);\n\n    let updatedExpenses = expenses ? [...expenses, expense] : [expense];\n\n    setLocalStorage(localStorageKey, updatedExpenses);\n\n    return updatedExpenses;\n  };\n\n  const filter = filter => {\n    const expenses = getLocalStorage(localStorageKey);\n\n    console.log(\"[FILTER EXPENSES]\", expenses);\n\n    let updatedExpenses = expenses;\n\n    if (filter.month !== -1 && filter.year !== -1) {\n      updatedExpenses = expenses\n        .filter(\n          expense =>\n            new Date(expense.date).getMonth() === filter.month &&\n            new Date(expense.date).getFullYear() === filter.year\n        )\n        .sort(expenseCompare);\n    }\n\n    dispatch({ type: FILTER_EXPENSES, payload: { updatedExpenses, filter } });\n  };\n\n  const remove = id => {\n    _removeExpense(id);\n    dispatch({ type: REMOVE_EXPENSE, payload: id });\n  };\n\n  const _removeExpense = id => {\n    const expenses = getLocalStorage(localStorageKey);\n    let updatedExpenses = expenses.filter(expense => expense.id !== id);\n\n    console.log(\"[REMOVE EXPENSES hook]\", updatedExpenses);\n\n    setLocalStorage(localStorageKey, updatedExpenses);\n\n    return updatedExpenses;\n  };\n\n  const changeLang = lang => {\n    dispatch({type: CHANGE_LANG, payload: lang})\n  }\n\n  return {\n    state,\n    total: getTotal(),\n    list,\n    add,\n    filter,\n    remove,\n    changeLang\n  };\n};\n\nexport default useExpenses;\n","import Header from './Header'\n\nexport default Header","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ExpenseContext from \"../../context/ExpensesContext\";\nimport LocalizedStrings from \"react-localization\";\n\nconst Header = () => {\n  let strings = new LocalizedStrings({\n    en: {\n      expenseList: \"Expense List\",\n      addExpense: \"Add Expense\"\n    },\n    sr: {\n      expenseList: \"Lista troskova\",\n      addExpense: \"Dodaj troskove\"\n    }\n  });\n\n  const context = useContext(ExpenseContext);\n\n  if (context.state) {\n    strings.setLanguage(context.state.lang);\n    console.log(\"[CURRENT LANG]\", strings.getLanguage());\n  }\n\n  return (\n    <header>\n      <div className=\"l-lang\">\n        <ul>\n          <li>\n            <span onClick={() => context.changeLang(\"en\")}>English</span>\n          </li>\n          <li>\n            <span>|</span>\n          </li>\n          <li>\n            <span onClick={() => context.changeLang(\"sr\")}>Srpski</span>\n          </li>\n        </ul>\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to=\"/\" exact activeClassName=\"is-active-link\">\n              {strings.expenseList}\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/add-expense\" exact activeClassName=\"is-active-link\">\n              {strings.addExpense}\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import FilterExpenses from './FilterExpenses'\n\nexport default FilterExpenses","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport ExpensesContext from \"../../context/ExpensesContext\";\nimport LocalizedStrings from \"react-localization\";\n\nconst FilterExpenses = () => {\n  let strings = new LocalizedStrings({\n    en: {\n      selectDate: \"Select date 2\",\n      month: \"month\",\n      year: \"year\",\n      all: \"All\",\n      may: \"May\",\n      submit: \"submit\"\n    },\n    sr: {\n      selectDate: \"Izaberi datum\",\n      month: \"mesec\",\n      year: \"godina\",\n      all: \"Sve\",\n      may: \"Maj\",\n      submit: \"potvrdi\"\n    }\n  });\n\n  const context = useContext(ExpensesContext);\n\n  const [selectDisabled, setSelectDisabled] = useState(true);\n\n  const selectMonthRef = useRef(null);\n  const selectYearRef = useRef(null);\n\n  if (context.state) {\n    strings.setLanguage(context.state.lang);\n    console.log(\"[CURRENT LANG]\", strings.getLanguage());\n  }\n\n  useEffect(() => {\n    console.log(\"[USE EFFECT filter]\");\n    selectMonthRef.current.value = context.state ? context.state.month : -1;\n    selectYearRef.current.value = context.state ? context.state.year : -1;\n  }, [context.state]);\n\n  const _setDisabled = () => {\n    parseInt(selectMonthRef.current.value) !== -1\n      ? setSelectDisabled(false)\n      : setSelectDisabled(true);\n  };\n\n  const onChangeMonth = e => {\n    _setDisabled();\n\n    if (selectMonthRef.current.value !== \"-1\") {\n      selectYearRef.current.value = new Date().getFullYear();\n    }\n  };\n\n  const onChangeYear = e => {\n    console.log(\"[onChangeYear]\", selectYearRef.current.value);\n\n    if (selectYearRef.current.value === \"-1\") {\n      selectMonthRef.current.value = \"-1\";\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    context.filter({\n      month: parseInt(selectMonthRef.current.value),\n      year: parseInt(selectYearRef.current.value)\n    });\n  };\n\n  return (\n    <>\n      <form className=\"l-filter\" onSubmit={onSubmitHandler}>\n        <span>{strings.selectDate}: </span>\n        <div className=\"l-fields\">\n          <span>{strings.month}:</span>\n          <select\n            name=\"expenses-month\"\n            onChange={onChangeMonth}\n            ref={selectMonthRef}\n            style={{ marginRight: \"20px\" }}\n          >\n            <option value=\"-1\">{strings.all}</option>\n            <option value=\"0\">Jan</option>\n            <option value=\"1\">Feb</option>\n            <option value=\"2\">Mar</option>\n            <option value=\"3\">Apr</option>\n            <option value=\"4\">{strings.may}</option>\n            <option value=\"5\">Jun</option>\n            <option value=\"6\">Jul</option>\n            <option value=\"7\">Avg</option>\n            <option value=\"8\">Sep</option>\n            <option value=\"9\">Okt</option>\n            <option value=\"10\">Nov</option>\n            <option value=\"11\">Dec</option>\n          </select>\n          <span>{strings.year}:</span>\n          <select\n            name=\"expenses-year\"\n            onChange={onChangeYear}\n            ref={selectYearRef}\n            disabled={selectDisabled}\n          >\n            <option value=\"-1\">All</option>\n            <option value=\"2019\">2019</option>\n            <option value=\"2020\">2020</option>\n          </select>\n        </div>\n        <div className=\"l-action\">\n          <button type=\"submit\">{strings.submit}</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default FilterExpenses;\n","import React, { useContext } from \"react\";\nimport { getLocaleDate } from \"../../../helpers/Utility\";\nimport ExpensesContext from \"../../../context/ExpensesContext\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst Expense = ({ expense }) => {\n\n  const context = useContext(ExpensesContext);\n\n  return (\n    <li>\n      <span style={{ marginRight: \"10px\", color: \"blue\" }}>\n        {getLocaleDate(expense.date)}\n      </span>\n      <span style={{ marginRight: \"10px\", color: \"red\" }}>\n        {expense.price.toFixed(2)}\n      </span>\n      <span style={{ marginRight: \"10px\" }}>{expense.name}</span>\n      <span\n        style={{ fontSize: \"10px\", color: \"red\", cursor: \"pointer\" }}\n        onClick={() => context.remove(expense.id)}\n      >\n        <FaTimes />\n      </span>\n    </li>\n  );\n};\n\nexport default Expense;\n","import ExpensesList from './ExpensesList'\n\nexport default ExpensesList","import React, { useContext } from \"react\";\nimport ExpensesContext from \"../../context/ExpensesContext\";\nimport FilterExpenses from \"../FilterExpenses\";\nimport Expense from \"./Expense/Expense\";\n\nconst ExpensesList = () => {\n  const context = useContext(ExpensesContext);\n\n  return (\n    <>\n      <FilterExpenses />\n      <ul>\n        {context.state\n          ? context.state.expenses.map((expense, index) => (\n              <Expense key={index} expense={expense} />\n            ))\n          : \"Loading ...\"}\n      </ul>\n    </>\n  );\n};\n\nexport default ExpensesList;\n","import React, { useRef, useContext, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ExpenseContext from \"../../context/ExpensesContext\";\nimport LocalizedStrings from \"react-localization\";\nimport { registerLocale } from \"react-datepicker\";\nimport sr from \"date-fns/locale/sr\";\nregisterLocale(\"sr\", sr);\n\nconst AddExpenseForm = () => {\n  let strings = new LocalizedStrings({\n    en: {\n      addExpenseName: \"add expense name\",\n      addExpenseValue: \"add expense value\",\n      submit: \"submit\",\n      emptyName: \"empty expense name\",\n      emptyPrice: \"empty expense value\"\n    },\n    sr: {\n      addExpenseName: \"unesi naziv utroska\",\n      addExpenseValue: \"unesi potrosenu vrednost\",\n      submit: \"potvrdi\",\n      emptyName: \"prazno ime utroska\",\n      emptyPrice: \"prazna vrednost utroska\"\n    }\n  });\n\n  const [errors, setErrors] = useState(null);\n\n  const context = useContext(ExpenseContext);\n\n  if (context.state) {\n    strings.setLanguage(context.state.lang);\n    console.log(\"[CURRENT LANG]\", strings.getLanguage());\n  }\n\n  const expenseInputPriceRef = useRef(null);\n  const expenseInputNameRef = useRef(null);\n\n  const [date, setDate] = useState(new Date());\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    const errors = validateExpense();\n\n    if (Object.keys(errors).length === 0) {\n      const newExpense = createExpense();\n      context.add(newExpense);\n\n      expenseInputNameRef.current.value = \"\";\n      expenseInputPriceRef.current.value = \"\";\n    }\n  };\n\n  const createExpense = () => {\n    const expense = {};\n\n    expense.id = Math.round(Math.random() * 1000000);\n    expense.name = expenseInputNameRef.current.value;\n    expense.price = parseInt(expenseInputPriceRef.current.value);\n    expense.date = date;\n\n    return expense;\n  };\n\n  const validateExpense = () => {\n    let errors = {};\n\n    if (expenseInputNameRef.current.value === \"\")\n      errors.emptyName = strings.emptyName;\n    if (expenseInputPriceRef.current.value === \"\")\n      errors.emptyPrice = strings.emptyPrice;\n\n    setErrors(errors)\n\n    return errors;\n  };\n\n  const handleChange = date => {\n    setDate(date);\n  };\n\n  return (\n    <div className=\"l-add-expense-form\">\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"l-fields\">\n          <input\n            type=\"text\"\n            name=\"expense\"\n            ref={expenseInputNameRef}\n            placeholder={strings.addExpenseName}\n          />\n          {errors && errors.emptyName}\n          <input\n            type=\"text\"\n            name=\"expense\"\n            ref={expenseInputPriceRef}\n            placeholder={strings.addExpenseValue}\n          />\n          {errors && errors.emptyPrice}\n        </div>\n        <div className=\"l-field\">\n          <DatePicker locale=\"sr\" selected={date} onChange={handleChange} />\n        </div>\n\n        <button type=\"submit\">{strings.submit}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddExpenseForm;\n","import AddExpenseForm from './AddExpenseForm'\n\nexport default AddExpenseForm","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport \"./styles/styles.scss\"\n\nimport ExpensesContext from './context/ExpensesContext'\nimport useExpenses from './hooks/useExpenses'\nimport Header from './components/Header'\nimport ExpensesList from './components/ExpensesList'\nimport AddExpenseForm from './components/AddExpenseForm'\n\nfunction App() {\n\n  const localStarageKey = 'react_expenses'\n  const {state, filteredList, total, add, filter,remove, changeLang } = useExpenses(localStarageKey)\n\n  return (\n    <div className=\"l-app\">\n      <ExpensesContext.Provider\n        value={{ state, filteredList, total, add, filter, remove, changeLang }}\n      >\n        <Router>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={ExpensesList} />\n            <Route path=\"/add-expense\" exact component={AddExpenseForm} />\n          </Switch>\n        </Router>\n      </ExpensesContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}