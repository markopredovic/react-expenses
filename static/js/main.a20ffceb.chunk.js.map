{"version":3,"sources":["reducers/rootReducer.js","store.js","types.js","axiosInstance.js","api/api.js","actions/actions.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","components/UI/Layout.js","components/common/PageTitle/index.js","components/common/PageTitle/PageTitle.js","components/pages/HomePage.js","components/Expense/Expense.js","shared/Utility.js","components/FilterExpenses/index.js","components/FilterExpenses/FilterExpenses.js","components/pages/ExpensesListPage.js","shared/utils.js","hooks/useForm.js","components/common/InlineMessage/InlineMessage.js","components/forms/AddExpenseForm.js","components/pages/AddExpensePage.js","components/forms/LoginForm.js","components/pages/LoginPage.js","components/forms/SignUpForm.js","components/pages/RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","token","user","expenses","filter","month","Date","getMonth","year","getFullYear","userLoggedIn","state","data","jwt","userLoggedOut","filterUpdate","newFilter","parseInt","deleteExpense","id","updatedExpenses","expense","fetchExpenses","addExpense","store","createStore","action","type","payload","composeWithDevTools","applyMiddleware","thunkMiddleware","axiosInstance","axios","create","baseURL","timeout","addAuthorizationHeader","getState","interceptors","request","use","config","headers","Authorization","error","Promise","reject","api","login","credentials","a","post","res","Error","message","register","e","getExpenses","get","delete","dispatch","expenseDeleted","response","messages","expensesFetched","expenseAdded","Header","history","useHistory","useDispatch","isLoggedIn","useSelector","className","Navbar","bg","variant","expand","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","exact","Divider","Button","onClick","push","Link","Footer","href","Layout","children","PageTitle","HomePage","Expense","amount","expense_date","toFixed","toLocaleDateString","FilterExpenses","currentFilter","updateFilter","selectMonthRef","useRef","selectYearRef","useEffect","current","value","Form","onSubmit","preventDefault","Group","controlId","Label","Control","ref","ExpensesListPage","useState","isExpenseDeleted","setExpenseDeleted","isLogged","stringDate","date","utils","total","length","reduce","acc","expenseList","map","key","handleDelete","console","log","Alert","autoHeight","autoHeightMin","autoHeightMax","Table","responsive","hover","striped","size","useForm","initialData","setData","changeHandler","target","name","InlineMessage","undefined","AddExpenseForm","errors","setErrors","isExpenseAdded","setExpenseAdded","_errors","trim","_validateForm","Object","keys","expenseData","placeholder","onChange","isInvalid","AddExpensePage","LoginForm","identifier","password","handleSubmit","loginError","LoginPage","username","email","SignUpForm","toString","replace","RegisterPage","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a20ffceb.chunk.js","sourcesContent":["import {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  FILTER_UPDATE,\n  EXPENSE_DELETED,\n  EXPENSE_ADDED,\n  GET_EXPENSES_LIST,\n} from \"../types\";\n\nconst initialState = {\n  token: null,\n  user: null,\n  expenses: [],\n  filter: {\n    month: new Date().getMonth(),\n    year: new Date().getFullYear(),\n  },\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return userLoggedIn(state, action.payload);\n    case USER_LOGGED_OUT:\n      return userLoggedOut(state);\n    case FILTER_UPDATE:\n      return filterUpdate(state, action.payload);\n    case EXPENSE_DELETED:\n      return deleteExpense(state, action.payload);\n    case GET_EXPENSES_LIST:\n      return fetchExpenses(state, action.payload);\n    case EXPENSE_ADDED:\n      return addExpense(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nconst userLoggedIn = (state, data) => {\n  return {\n    ...state,\n    token: data.jwt,\n    user: data.user,\n  };\n};\n\nconst userLoggedOut = (state) => {\n  return {\n    ...state,\n    token: null,\n    user: null,\n    expenses: [],\n  };\n};\n\nconst filterUpdate = (state, newFilter) => {\n  return {\n    ...state,\n    filter: {\n      month: parseInt(newFilter.month),\n      year: parseInt(newFilter.year),\n    },\n  };\n};\n\nconst deleteExpense = (state, id) => {\n  let updatedExpenses = state.expenses.filter((expense) => expense.id !== id);\n\n  return {\n    ...state,\n    expenses: updatedExpenses,\n  };\n};\n\nconst fetchExpenses = (state, expenses) => {\n  return {\n    ...state,\n    expenses,\n  };\n};\n\nconst addExpense = (state, expense) => {\n  return {\n    ...state,\n    expenses: [...state.expenses, expense],\n  };\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nexport { store as default };\n","export const LIST_ALL_EXPENSES = \"LIST_ALL_EXPENSES\";\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const FILTER_EXPENSES = \"FILTER_EXPENSES\";\nexport const REMOVE_EXPENSE = \"REMOVE_EXPENSE\";\nexport const CHANGE_LANG = \"CHANGE_LANG\";\n\nconst USER_LOGGED_IN = \"USER_LOGGED_IN\";\nconst USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\nconst FILTER_UPDATE = \"FILTER_UPDATE\";\n\nconst EXPENSE_DELETED = \"EXPENSE_DELETED\";\nconst EXPENSE_ADDED = \"EXPENSE_ADDED\";\nconst GET_EXPENSES_LIST = \"GET_EXPENSES_LIST\";\n\nexport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  FILTER_UPDATE,\n  EXPENSE_DELETED,\n  EXPENSE_ADDED,\n  GET_EXPENSES_LIST,\n};\n","import axios from \"axios\";\n\nimport store from \"./store\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:1337\",\n  timeout: 1000,\n});\n\nconst addAuthorizationHeader = () => {\n  // set headers\n  const token = store.getState().token;\n\n  axiosInstance.interceptors.request.use(\n    function (config) {\n      if (token) {\n        config.headers = {\n          ...config.headers,\n          Authorization: `Bearer ${token}`,\n        };\n      }\n      return config;\n    },\n    function (error) {\n      return Promise.reject(error);\n    }\n  );\n};\n\nconst removeAuthorizationHeader = () => {\n  axiosInstance.interceptors.request.use(\n    function (config) {\n      config.headers = {\n        ...config.headers,\n        Authorization: \"\",\n      };\n      return config;\n    },\n    function (error) {\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport {\n  axiosInstance as default,\n  addAuthorizationHeader,\n  removeAuthorizationHeader,\n};\n","import axiosInstance, { addAuthorizationHeader } from \"../axiosInstance\";\n\nconst api = {\n  login: async (credentials) => {\n    try {\n      const res = await axiosInstance.post(\"/auth/local\", credentials);\n      return res.data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  },\n  register: (data) => {\n    try {\n      return axiosInstance.post(\"/auth/local/register\", data);\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  },\n  getExpenses: async () => {\n    try {\n      addAuthorizationHeader();\n      const res = await axiosInstance.get(\"/expenses\");\n      return res.data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  },\n  addExpense: (data) => {\n    try {\n      addAuthorizationHeader();\n      return axiosInstance.post(\"/expenses\", data);\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  },\n  deleteExpense: (id) => {\n    try {\n      return axiosInstance.delete(`/expenses/${id}`);\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  },\n};\n\nexport { api as default };\n","import api from \"../api\";\n\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  FILTER_UPDATE,\n  EXPENSE_DELETED,\n  GET_EXPENSES_LIST,\n  EXPENSE_ADDED,\n} from \"../types\";\n\nconst login = (credentials) => {\n  return async (dispatch) => {\n    try {\n      const data = await api.login(credentials);\n      dispatch(userLoggedIn(data));\n    } catch (e) {\n      throw new Error(\"Unable to login\");\n    }\n  };\n};\n\nconst logout = () => {\n  return {\n    type: USER_LOGGED_OUT,\n  };\n};\n\nconst userLoggedIn = (data) => {\n  return {\n    type: USER_LOGGED_IN,\n    payload: {\n      jwt: data.jwt,\n      user: data.user,\n    },\n  };\n};\n\nconst filterUpdate = (newFilter) => {\n  return {\n    type: FILTER_UPDATE,\n    payload: newFilter,\n  };\n};\n\nconst deleteExpense = (id) => {\n  return async (dispatch) => {\n    try {\n      const res = await api.deleteExpense(id);\n      dispatch(expenseDeleted(res.data.id));\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n};\n\nconst expenseDeleted = (id) => {\n  return {\n    type: EXPENSE_DELETED,\n    payload: id,\n  };\n};\n\nconst register = (data) => {\n  return async (dispatch) => {\n    try {\n      await api.register(data);\n    } catch (e) {\n      throw new Error(e.response.data.message[0].messages[0].message);\n    }\n  };\n};\n\nconst getExpenses = () => {\n  return async (dispatch) => {\n    try {\n      const data = await api.getExpenses();\n      dispatch(expensesFetched(data));\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  };\n};\n\nconst expensesFetched = (data) => {\n  return {\n    type: GET_EXPENSES_LIST,\n    payload: data,\n  };\n};\n\nconst addExpense = (data) => {\n  return async (dispatch) => {\n    try {\n      const res = await api.addExpense(data);\n      dispatch(expenseAdded(res.data));\n    } catch (e) {\n      throw new Error(\"Unable to add\");\n    }\n  };\n};\n\nconst expenseAdded = (data) => {\n  return {\n    type: EXPENSE_ADDED,\n    payload: data,\n  };\n};\n\nexport {\n  login,\n  logout,\n  filterUpdate,\n  deleteExpense,\n  register,\n  getExpenses,\n  addExpense,\n};\n","import Header from './Header'\n\nexport default Header","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown, Button } from \"react-bootstrap\";\n\nimport { logout } from \"../../actions\";\n\nconst Header = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state) => !!state.token);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    history.push(\"/\");\n  };\n\n  return (\n    <header className=\"mb-5\">\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <div className=\"container\">\n          <Navbar.Brand as={NavLink} to=\"/\">\n            Expenses\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse\n            id=\"basic-navbar-nav\"\n            className=\"justify-content-end\"\n          >\n            <Nav>\n              {!isLoggedIn ? (\n                <>\n                  <Nav.Link as={NavLink} to=\"/register\">\n                    Signup\n                  </Nav.Link>\n                  <Nav.Link as={NavLink} to=\"/login\">\n                    Login\n                  </Nav.Link>\n                </>\n              ) : (\n                <NavDropdown title=\"Dashboard\" id=\"dashboard\">\n                  <NavDropdown.Item as={NavLink} to=\"/expenses\" exact>\n                    Expenses\n                  </NavDropdown.Item>\n                  <NavDropdown.Item as={NavLink} to=\"/expenses/new\" exact>\n                    Add expense\n                  </NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item as={Button} onClick={handleLogout}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import Footer from \"./Footer\";\n\nexport default Footer;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"fixed-bottom py-2 text-center bg-dark text-white\">\n        Developed by{\" \"}\n        <a href=\"https://markoni.codes\" className=\"text-warning\">\n          markoni.codes\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Layout = ({ children }) => {\n  return (\n    <main>\n      <div className=\"container\">{children}</div>\n    </main>\n  );\n};\n\nexport default Layout;\n","import PageTitle from \"./PageTitle\";\n\nexport default PageTitle;\n","import React from \"react\";\n\nconst PageTitle = ({ title }) => {\n  return <h3 className=\"mb-4\">{title}</h3>;\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport Layout from \"../UI/Layout\";\nimport PageTitle from \"../common/PageTitle\";\n\nconst HomePage = () => {\n  return (\n    <Layout>\n      <PageTitle title=\"Home\" />\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { getLocaleDate } from \"../../shared/Utility\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst Expense = ({ id, title, amount, expense_date, deleteExpense }) => {\n  return (\n    <tr>\n      <td>\n        <span className=\"\">{title}</span>\n      </td>\n      <td>\n        <span className=\"\">{amount.toFixed(2)}</span>\n      </td>\n      <td>\n        <span className=\"\">{getLocaleDate(expense_date)}</span>\n      </td>\n      <td>\n        <span className=\"expense-delete text-danger\" onClick={deleteExpense}>\n          <FaTimes />\n        </span>\n      </td>\n    </tr>\n  );\n};\n\nexport default Expense;\n","export const getLocalStorage = key => {\n  let localStorageItemJson = null;\n\n  try {\n    localStorageItemJson = window.localStorage.getItem(key);\n  } catch (e) {\n    return null;\n  }\n  const localStorageItem = JSON.parse(localStorageItemJson);\n\n  return localStorageItem;\n};\n\nexport const setLocalStorage = (key, value) => {\n  const valueString = JSON.stringify(value);\n\n  window.localStorage.setItem(key, valueString);\n};\n\nexport const expenseCompare = (a, b) => {\n  return new Date(a.date) > new Date(b.date) ? -1 : 1;\n};\n\nexport const getLocaleDate = date => {\n  let localeDate = new Date(date);\n\n  return localeDate.toLocaleDateString(\"sr-SR\");\n};\n\nexport const getMonthName = (locale, month) => {\n  let month_name = null;\n  const months_en = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n\n  const months_rs = [\n    \"Januar\",\n    \"Februar\",\n    \"Mart\",\n    \"April\",\n    \"Maj\",\n    \"Jun\",\n    \"Jul\",\n    \"Avgust\",\n    \"Septembar\",\n    \"Oktobar\",\n    \"Novembar\",\n    \"Decembar\"\n  ];\n\n  if (locale === \"en\") {\n    month_name = months_en[month];\n  }\n  if (locale === \"rs\") {\n    month_name = months_rs[month];\n  }\n\n  return month_name;\n};\n","import FilterExpenses from './FilterExpenses'\n\nexport default FilterExpenses","import React, { useEffect, useRef } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst FilterExpenses = ({ currentFilter, updateFilter }) => {\n  const selectMonthRef = useRef(null);\n  const selectYearRef = useRef(null);\n\n  useEffect(() => {\n    selectMonthRef.current.value = currentFilter.month;\n    selectYearRef.current.value = currentFilter.year;\n  }, [currentFilter]);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const newFilter = {\n      month: selectMonthRef.current.value,\n      year: selectYearRef.current.value,\n    };\n\n    updateFilter(newFilter);\n  };\n\n  return (\n    <Form className=\"d-flex align-items-end mb-3\" onSubmit={onSubmitHandler}>\n      <Form.Group controlId=\"filter.month\" className=\"mr-3 mb-0\">\n        <Form.Label>Month:</Form.Label>\n        <Form.Control as=\"select\" ref={selectMonthRef}>\n          <option value=\"0\">Jan</option>\n          <option value=\"1\">Feb</option>\n          <option value=\"2\">Mar</option>\n          <option value=\"3\">Apr</option>\n          <option value=\"4\">May</option>\n          <option value=\"5\">Jun</option>\n          <option value=\"6\">Jul</option>\n          <option value=\"7\">Aug</option>\n          <option value=\"8\">Sep</option>\n          <option value=\"9\">Oct</option>\n          <option value=\"10\">Nov</option>\n          <option value=\"11\">Dec</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group controlId=\"filter.year\" className=\"mr-3 mb-0\">\n        <Form.Label>Year:</Form.Label>\n        <Form.Control as=\"select\" ref={selectYearRef}>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2023\">2023</option>\n        </Form.Control>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Filter\n      </Button>\n    </Form>\n  );\n};\n\nexport default FilterExpenses;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { Table, Alert } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Expense from \"../Expense\";\nimport FilterExpenses from \"../FilterExpenses\";\nimport * as utils from \"../../shared/utils\";\nimport { filterUpdate, deleteExpense, getExpenses } from \"../../actions\";\n\nconst ExpensesListPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [isExpenseDeleted, setExpenseDeleted] = useState(false);\n\n  const isLogged = useSelector((state) => !!state.token);\n\n  useEffect(() => {\n    if (!isLogged) {\n      history.push(\"/\");\n    } else {\n      dispatch(getExpenses());\n    }\n  }, []);\n\n  const expenses = useSelector((state) => {\n    const { filter } = state;\n\n    if (!filter.month && !filter.year) {\n      return state.expenses;\n    } else {\n      let expenses = state.expenses.filter((expense) => {\n        const [month, year] = utils.getMonthAndYearFromDate(\n          expense.expense_date\n        );\n        if (filter.month && filter.year) {\n          return month === filter.month && year === filter.year;\n        } else if (!filter.month && filter.year) {\n          return year === filter.year;\n        } else if (!filter.year && filter.month) {\n          return month === filter.month;\n        } else return null;\n      });\n\n      return expenses;\n    }\n  });\n\n  const filter = useSelector((state) => state.filter);\n\n  const total =\n    expenses.length > 0\n      ? expenses.reduce((acc, current) => acc + current.amount, 0)\n      : 0;\n\n  const expenseList = expenses.map((expense) => (\n    <Expense\n      key={expense.id}\n      {...expense}\n      deleteExpense={() => handleDelete(expense.id)}\n    />\n  ));\n\n  const updateFilter = (newFilter) => {\n    setExpenseDeleted(false);\n    dispatch(filterUpdate(newFilter));\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      setExpenseDeleted(false);\n      await dispatch(deleteExpense(id));\n      setExpenseDeleted(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"container\">\n        <FilterExpenses currentFilter={filter} updateFilter={updateFilter} />\n        {!!isExpenseDeleted && <Alert variant=\"danger\">Expense Deleted</Alert>}\n        {expenses.length > 0 ? (\n          <>\n            <Scrollbars autoHeight autoHeightMin={10} autoHeightMax={310}>\n              <Table responsive hover striped size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Amount</th>\n                    <th>Date</th>\n                    <th>DEL</th>\n                  </tr>\n                </thead>\n                <tbody>{expenseList}</tbody>\n              </Table>\n            </Scrollbars>\n            <div className=\"mt-3\">\n              Total: <strong>{total.toFixed(2)}</strong>\n            </div>\n          </>\n        ) : (\n          <div>No data for selected period</div>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default ExpensesListPage;\n","const getMonthAndYearFromDate = (stringDate) => {\n  const date = new Date(stringDate);\n  const month = date.getMonth();\n  const year = date.getFullYear();\n\n  return [month, year];\n};\n\nexport { getMonthAndYearFromDate };\n","import { useState } from \"react\";\n\nconst useForm = (initialData) => {\n  const [data, setData] = useState(initialData);\n\n  const changeHandler = (e) => {\n    if (e.target.type === \"number\") {\n      setData({ ...data, [e.target.name]: parseInt(e.target.value) });\n    }\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  return {\n    data,\n    setData,\n    changeHandler,\n  };\n};\n\nexport { useForm };\n","import React from \"react\";\n\nconst InlineMessage = ({ children }) => {\n  return <span className=\"text-danger\">{children}</span>;\n};\n\nexport default InlineMessage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport { useForm } from \"../../hooks/useForm\";\nimport InlineMessage from \"../common/InlineMessage\";\nimport { addExpense } from \"../../actions\";\n\nconst initialData = {\n  title: \"\",\n  amount: undefined,\n  expense_date: new Date(),\n};\n\nconst AddExpenseForm = () => {\n  const [errors, setErrors] = useState({});\n  const [isExpenseAdded, setExpenseAdded] = useState(false);\n  const { data, setData, changeHandler } = useForm(initialData);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const isLogged = useSelector((state) => !!state.token);\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (!isLogged) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  const _validateForm = () => {\n    let _errors = {};\n\n    if (data.title.trim() === \"\") {\n      _errors.title = \"Required field\";\n    }\n\n    if (data.amount === undefined) {\n      _errors.amount = \"Required field\";\n    }\n\n    return _errors;\n  };\n\n  const _resetForm = () => {\n    setData(initialData);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"data\", data);\n\n    setErrors({});\n    setExpenseAdded(false);\n    const _errors = _validateForm();\n\n    if (Object.keys(_errors).length === 0) {\n      // add user to payload\n      let expenseData = {\n        ...data,\n        user,\n      };\n      setExpenseAdded(true);\n      dispatch(addExpense(expenseData));\n      _resetForm();\n    } else {\n      setErrors(_errors);\n    }\n  };\n\n  return (\n    <div>\n      {!!isExpenseAdded && <Alert variant=\"success\">New expense added</Alert>}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"addExpense.title\">\n          <Form.Label>\n            Title <span className=\"text-danger\">*</span>\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Title\"\n            name=\"title\"\n            value={data.title}\n            onChange={(e) => changeHandler(e)}\n            isInvalid={!!errors.title}\n          />\n          {!!errors.title && <InlineMessage>{errors.title}</InlineMessage>}\n        </Form.Group>\n        <Form.Group controlId=\"addExpense.amount\">\n          <Form.Label>\n            Amount <span className=\"text-danger\">*</span>\n          </Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Amount\"\n            name=\"amount\"\n            value={!!data.amount && data.amount}\n            onChange={(e) => changeHandler(e)}\n            isInvalid={!!errors.amount}\n          />\n          {!!errors.amount && <InlineMessage>{errors.amount}</InlineMessage>}\n        </Form.Group>\n        <Form.Group controlId=\"addExpense.date\">\n          <Form.Label>Date:</Form.Label>\n          <Form.Control\n            type=\"date\"\n            name=\"expense_date\"\n            value={data.expense_date}\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddExpenseForm;\n","import React from \"react\";\n\nimport Layout from \"../UI/Layout\";\nimport PageTitle from \"../common/PageTitle\";\nimport AddExpenseForm from \"../forms/AddExpenseForm\";\n\nconst AddExpensePage = () => {\n  return (\n    <Layout>\n      <PageTitle title=\"Add expense\" />\n      <AddExpenseForm />\n    </Layout>\n  );\n};\n\nexport default AddExpensePage;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport { useForm } from \"../../hooks/useForm\";\nimport { login } from \"../../actions\";\n\nconst LoginForm = () => {\n  const initialData = {\n    identifier: \"\",\n    password: \"\",\n  };\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const { data, changeHandler } = useForm(initialData);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await dispatch(login(data));\n      history.push(\"/expenses\");\n    } catch (e) {\n      setErrors({ loginError: e.message });\n    }\n  };\n\n  return (\n    <div>\n      {!!errors.loginError && (\n        <Alert variant=\"danger\">{errors.loginError}</Alert>\n      )}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"login.username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"identifier\"\n            value={data.identifier}\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"login.password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={data.password}\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"../forms/LoginForm\";\nimport PageTitle from \"../common/PageTitle\";\nimport Layout from \"../UI/Layout\";\n\nconst LoginPage = () => {\n  return (\n    <Layout>\n      <PageTitle title=\"Login\" />\n      <LoginForm />\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useForm } from \"../../hooks/useForm\";\nimport { register } from \"../../actions\";\n\nconst initialData = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const [errors, setErrors] = useState({});\n\n  const { data, changeHandler } = useForm(initialData);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await dispatch(register(data));\n    } catch (e) {\n      setErrors({ register: e.toString().replace(\"Error: \", \"\") });\n    }\n  };\n\n  return (\n    <div>\n      {!!errors.register && <Alert variant=\"danger\">{errors.register}</Alert>}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"signup.username\">\n          <Form.Label>Username:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={data.username}\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"signup.email\">\n          <Form.Label>Email:</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={data.email}\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"signup.password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={data.password}\n            onChange={(e) => changeHandler(e)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Sign up\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Layout from \"../UI/Layout\";\nimport SignUpForm from \"../forms/SignUpForm\";\n\nconst RegisterPage = () => {\n  return (\n    <Layout>\n      <PageTitle title=\"Sign Up\" />\n      <SignUpForm />\n    </Layout>\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/bootstrap.min.css\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomePage from \"./components/pages/HomePage\";\nimport ExpensesListPage from \"./components/pages/ExpensesListPage\";\nimport AddExpensePage from \"./components/pages/AddExpensePage\";\nimport LoginPage from \"./components/pages/LoginPage\";\nimport RegisterPage from \"./components/pages/RegisterPage\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <div className=\"l-app\">\n      <Provider store={store}>\n        <Router>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/expenses\" exact component={ExpensesListPage} />\n            <Route path=\"/expenses/new\" exact component={AddExpensePage} />\n            <Route path=\"/login\" exact component={LoginPage} />\n            <Route path=\"/register\" exact component={RegisterPage} />\n          </Switch>\n          <Footer />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}